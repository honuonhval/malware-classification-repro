#+TITLE: Malware Classification with CNN
* Jump Right In
Look at `malware_classification.ipynb` to jump right into the code
* Motivation
Verifying results from Malware Classification with Deep Convolutional Neural Networks (kalash2018), focusing on dataset from Microsoft through Kaggle (Dataset can be obtained here https://www.kaggle.com/c/malware-classification/overview) as it is an interesting application of combining field of information security with AI.
#+CAPTION: Malware .bytes visualized and classified
#+NAME: fig:MAL-VER1
[[./resources/malware_verification.jpg]]
* Overview
I preprocess the malware .bytes files as well as labels so the training can be straight forward.  Code for preprocessing is available in `preprocessor.ipynb` and `relabel.awk`.
After preprocessing, we recreate the CNN architecture with VGG-16 (initialized with pretrained parameters).  The architecture uses cross-entropy loss function as the cost function and is optimized with SGD (stochastic gradient descent).

9 families of malware to classify (classes):
1. Ramnit
2. Lollipop
3. Kelihos_ver3
4. Vundo
5. Simda
6. Tracur
7. Kelihos_ver1
8. Obfuscator.ACY
9. Gatak
* Results
On training set kalash2018 achieved accuracy of 98.99%.
My reproduction achieved similar accuracy 99.97%. Epic.
